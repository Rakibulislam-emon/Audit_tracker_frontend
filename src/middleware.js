// import { jwtVerify } from "jose";
// import { NextResponse } from "next/server";

// export async function middleware(request) {
//   const token = request.cookies.get("token")?.value;
//   const currentPath = request.nextUrl.pathname;

//   // тЭМ рж╣рзЛржоржкрзЗржЬ ("/") ржХрзЗ public route ржерзЗржХрзЗ ржмрж╛ржж ржжрж┐ржи!
//   const publicRoutes = ["/auth/login"];
//   const isPublicRoute = publicRoutes.some(
//     (route) => currentPath === route || currentPath.startsWith(route + "/")
//   );

//   // Skip static files
//   if (
//     currentPath.startsWith("/_next") ||
//     currentPath.startsWith("/favicon.ico") ||
//     currentPath.match(/\.(png|jpg|jpeg|svg|gif|ico)$/i)
//   ) {
//     return NextResponse.next();
//   }

//   // Public routes (рж╢рзБржзрзБ /auth/login)
//   if (isPublicRoute) {
//     if (token) {
//       try {
//         const secret = new TextEncoder().encode(process.env.JWT_SECRET);
//         const { payload } = await jwtVerify(token, secret);
//         // рж▓ржЧржЗржи ржХрж░рж╛ ржерж╛ржХрж▓рзЗ /auth/login ржП ржерж╛ржХрж╛ ржЙржЪрж┐ржд ржирж╛ тЖТ ржбрзНржпрж╛рж╢ржмрзЛрж░рзНржбрзЗ ржкрж╛ржарж╛ржи
//         return NextResponse.redirect(
//           new URL(`/dashboard/${payload.role}`, request.url)
//         );
//       } catch {
//         // Invalid token тЖТ allow access to login page
//         return NextResponse.next();
//       }
//     }
//     return NextResponse.next();
//   }

//   // ЁЯФТ рж╕ржмржХрж┐ржЫрзБржЗ protected тАФ ржпрзЗржоржи: /, /dashboard, ржЗрждрзНржпрж╛ржжрж┐
//   if (!token) {
//     return NextResponse.redirect(new URL("/auth/login", request.url));
//   }

//   try {
//     const secret = new TextEncoder().encode(process.env.JWT_SECRET);
//     const { payload } = await jwtVerify(token, secret);
//     const role = payload.role;

//     const allowedRoles = ["admin", "auditor", "compliance"];
//     if (!allowedRoles.includes(role)) {
//       return NextResponse.redirect(new URL("/auth/login", request.url));
//     }

//     // тЬЕ ржпржжрж┐ ржХрзЗржЙ "/" ржП ржЖрж╕рзЗ тЖТ рждрж╛ржХрзЗ рждрж╛рж░ ржбрзНржпрж╛рж╢ржмрзЛрж░рзНржбрзЗ ржкрж╛ржарж╛ржи
//     if (currentPath === "/") {
//       return NextResponse.redirect(new URL(`/dashboard/${role}`, request.url));
//     }

//     // ржбрзНржпрж╛рж╢ржмрзЛрж░рзНржб рж░рзЛрж▓ ржнрзНржпрж╛рж▓рж┐ржбрзЗрж╢ржи
//     if (
//       currentPath.startsWith("/dashboard") &&
//       !currentPath.startsWith(`/dashboard/${role}`)
//     ) {
//       return NextResponse.redirect(new URL(`/dashboard/${role}`, request.url));
//     }

//     return NextResponse.next();
//   } catch (error) {
//     console.error("Auth failed:", error.message);
//     return NextResponse.redirect(new URL("/auth/login", request.url));
//   }
// }

// export const config = {
//   matcher: [
//     "/((?!_next/static|_next/image|favicon.ico|.*\\.(?:png|jpg|jpeg|svg|gif)$).*)",
//   ],
// };


import { NextResponse } from "next/server";

export async function middleware(request) {
┬а // тЬЕ рж╕ржм ржнрзЗрж░рж┐ржлрж┐ржХрзЗрж╢ржи рж╕рж╛ржорзЯрж┐ржХржнрж╛ржмрзЗ ржмржирзНржз ржХрж░рзБржи
┬а return NextResponse.next(); 

┬а /*
┬а 
┬а (ржЖржкржирж╛рж░ ржмрж╛ржХрж┐ рж╕ржм ржХрзЛржб ржПржЦрж╛ржирзЗ ржХржорзЗржирзНржЯ ржХрж░рж╛ ржерж╛ржХржмрзЗ)
┬а
┬а const token = request.cookies.get("token")?.value;
┬а const currentPath = request.nextUrl.pathname;
┬а ...
┬а ...
┬а */
}

export const config = {
┬а matcher: [
┬а ┬а "/((?!_next/static|_next/image|favicon.ico|.*\\.(?:png|jpg|jpeg|svg|gif)$).*)",
┬а ],
};